apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: filter-ratelimit
  namespace: istio-system
spec:
  workloadSelector:
    # select by label in the same namespace
    labels:
      istio: ingress
  configPatches:
    # The Envoy config you want to modify
    - applyTo: HTTP_FILTER
      match:
        context: GATEWAY
        listener:
          filterChain:
            filter:
              name: "envoy.filters.network.http_connection_manager"
              subFilter:
                name: "envoy.filters.http.router"
      patch:
        operation: INSERT_BEFORE
        # Adds the Envoy Rate Limit Filter in HTTP filter chain.
        value:
          name: envoy.filters.http.ratelimit
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.filters.http.ratelimit.v3.RateLimit
            # domain can be anything! Match it to the ratelimter service config
            domain: ratelimit-config
            failure_mode_deny: true
            timeout: 10s
            rate_limit_service:
              grpc_service:
                envoy_grpc:
                  cluster_name: outbound|8081||ratelimit.istio-system.svc.cluster.local
                  authority: ratelimit.istio-system.svc.cluster.local
              transport_api_version: V3
---
# apiVersion: networking.istio.io/v1alpha3
# kind: EnvoyFilter
# metadata:
#   name: filter-ratelimit-svc
#   namespace: istio-system
# spec:
#   workloadSelector:
#     labels:
#       istio: ingress
#   configPatches:
#     - applyTo: VIRTUAL_HOST
#       match:
#         context: GATEWAY
#         routeConfiguration:
#           vhost:
#             name: ""
#             route:
#               action: ANY
#       patch:
#         operation: MERGE
#         # Applies the rate limit rules.
#         value:
#           rate_limits:
#             - actions: # any actions in here
#               - request_headers:
#                   header_name: ":path"
#                   descriptor_key: "PATH"